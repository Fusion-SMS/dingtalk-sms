stages:
- push
- build
- deploy

cache:
  key: ${CI_PROJECT_ID}
  paths:
  - .gradle/


release_github:
  dependencies:
  - build
  only:
  - master
  stage: deploy
  script:
  - git push --set-upstream https://${github_key}@github.com/telegram-sms/dingtalk-sms.git HEAD:refs/heads/$CI_COMMIT_REF_NAME
  - /opt/github-release-upload.sh github_api_token=${github_key} owner=telegram-sms repo=dingtalk-sms tag=$(date "+%Y%m%d%H%M%S") filename="./app/build/outputs/apk/release/app-release.apk"


build:
  image: preventis/docker-android-alpine:latest
  stage: build
  script:
  - echo -e "ext {\n appVersionCode = ${CI_PIPELINE_ID}\n appVersionName = \"${CI_COMMIT_REF_NAME}\"}" > ./app/version.gradle
  - echo -e "systemProp.http.nonProxyHosts=dl.google.com\n systemProp.http.proxyHost=192.168.3.8\n systemProp.http.proxyPort=1080\n systemProp.https.proxyHost=192.168.3.8\n systemProp.https.proxyPort=1080\n org.gradle.jvmargs=-Xmx1536m\n org.gradle.parallel=true" >> gradle.properties
  - export GRADLE_USER_HOME=$(pwd)/.gradle
  - chmod +x ./gradlew
  - ./gradlew assembleRelease
  artifacts:
    paths:
    - app/build/outputs/apk/release/app-release.apk
    expire_in: 1 week
